name: "Build Kernel"
description: "Kernel build with KernelSU Wild + SUSFS + Wild patches + OnePlus patches"

inputs:
  model:
    required: true
    type: string
  soc:
    required: true
    type: string
  branch:
    required: true
    type: string
  manifest:
    required: true
    type: string
  android_version:
    required: true
    type: string
  kernel_version:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    # üöÄ Setup build environment
    - name: Setup Build System
      shell: bash
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update -qq
        sudo apt-get install -yq --no-install-recommends \
          python3 git curl libelf-dev lld build-essential flex bison libssl-dev \
          libncurses-dev liblz4-tool zlib1g-dev libxml2-utils rsync unzip python-is-python3 zip

    # üõ†Ô∏è Install Repo
    - name: Install Repo Tool
      shell: bash
      run: |
        mkdir -p ./git-repo
        curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > ./git-repo/repo
        chmod a+rx ./git-repo/repo
        echo "REPO=$GITHUB_WORKSPACE/./git-repo/repo" >> "$GITHUB_ENV"
        echo "CONFIG=${{ inputs.model }}" >> "$GITHUB_ENV"

    # üì¶ Clone dependencies
    - name: Clone AnyKernel3 and Patches
      shell: bash
      run: |
        git clone https://github.com/TheWildJames/AnyKernel3.git -b gki-2.0
        git clone https://github.com/TheWildJames/kernel_patches.git
        git clone https://gitlab.com/simonpunk/susfs4ksu.git

    # üíæ Init Kernel Source
    - name: Initialize Kernel Source
      shell: bash
      run: |
        mkdir -p "${{ inputs.model }}"
        cd "${{ inputs.model }}"
        if [[ "${{ inputs.manifest }}" == https://* ]]; then
          mkdir -p .repo/manifests
          curl -Ls ${{ inputs.manifest }} -o .repo/manifests/temp_manifest.xml
          $REPO init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m temp_manifest.xml --repo-rev=v2.16 --depth=1 --no-clone-bundle --no-tags
        else
          $REPO init -u https://github.com/OnePlusOSS/kernel_manifest.git -b ${{ inputs.branch }} -m ${{ inputs.manifest }} --repo-rev=v2.16 --depth=1 --no-clone-bundle --no-tags
        fi
        $REPO sync -c --no-clone-bundle --no-tags --optimized-fetch -j$(nproc --all) --fail-fast

    # üßπ Cleanup ABI
    - name: Clean Up ABI Exports
      shell: bash
      run: |
        cd "${{ inputs.model }}/kernel_platform"
        rm -f common/android/abi_gki_protected_exports_* || true
        rm -f msm-kernel/android/abi_gki_protected_exports_* || true

    # ‚ûï Add KernelSU Wild
    - name: Add KernelSU Wild
      shell: bash
      run: |
        cd "${{ inputs.model }}/kernel_platform"
        curl -LSs "https://raw.githubusercontent.com/WildKernels/Wild_KSU/wild/kernel/setup.sh" | bash -
        git submodule update --init --recursive

    # üìÇ Copy susfs sources
    - name: Copy SUSFS Sources
      shell: bash
      run: |
        cd "${{ inputs.model }}/kernel_platform"
        cp -r ../../susfs4ksu/kernel_patches/fs/* ./fs/ || true
        cp -r ../../susfs4ksu/kernel_patches/include/linux/* ./include/linux/ || true

    # ü©π Apply SUSFS enable patch
    - name: Apply 10_enable_susfs_for_ksu
      shell: bash
      run: |
        cd "${{ inputs.model }}/kernel_platform"
        patch -p1 --forward < ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch || true

    # ü©π Apply general patches
    - name: Apply hide stuff
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/69_hide_stuff.patch || true

    - name: Apply apk_sign.c_fix
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/apk_sign.c_fix.patch || true

    - name: Apply gki_ptrace
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/gki_ptrace.patch || true

    - name: Apply no-susfs_apk_sign.c_fix
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/no-susfs_apk_sign.c_fix.patch || true

    # ü©π Apply wild patches
    - name: Apply wild/fix_core_hook
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/wild/fix_core_hook.c.patch || true

    - name: Apply wild/fix_ksud
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/wild/fix_ksud.c.patch || true

    - name: Apply wild/fix_selinux
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/wild/fix_selinux.c.patch || true

    - name: Apply wild/fix_sucompat
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/wild/fix_sucompat.c.patch || true

    - name: Apply wild/kernel-patch-susfs
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/wild/kernel-patch-susfs-v1.5.7-to-KernelSU-Next.patch || true

    - name: Apply wild/manager
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/wild/manager.patch || true

    - name: Apply wild/syscall_hooks
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/wild/syscall_hooks.patch || true

    # ü©π Apply OnePlus hmbird patches
    - name: Apply oneplus/ak3_hmbird_patch
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/oneplus/hmbird/ak3_hmbird_patch.patch || true

    - name: Apply oneplus/hmbird_files_patch
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/oneplus/hmbird/hmbird_files_patch.patch || true

    - name: Apply oneplus/hmbird_kernel_patch
      shell: bash
      run: cd "${{ inputs.model }}/kernel_platform" && patch -p1 --forward < ../../susfs4ksu/oneplus/hmbird/hmbird_kernel_patch.patch || true

    # ‚öôÔ∏è Kernel configs
    - name: Add Kernel Configs
      shell: bash
      run: |
        cd "${{ inputs.model }}/kernel_platform/common"
        {
          echo "CONFIG_KSU=y"
          echo "CONFIG_KSU_SUSFS=y"
          echo "CONFIG_TMPFS_XATTR=y"
          echo "CONFIG_TCP_CONG_BBR=y"
          echo "CONFIG_IP_NF_TARGET_TTL=y"
        } >> arch/arm64/configs/gki_defconfig

    # üèóÔ∏è Build Kernel
    - name: Build Kernel
      shell: bash
      run: |
        KERNEL_PATH="$GITHUB_WORKSPACE/${{ inputs.model }}/kernel_platform"
        cd "$KERNEL_PATH/common"
        make -j$(nproc --all) O=out LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-android- gki_defconfig
        make -j$(nproc --all) O=out LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-android-

    # üì¶ Package Kernel
    - name: Create Kernel ZIP
      shell: bash
      run: |
        CONFIG_DIR="$GITHUB_WORKSPACE/${{ inputs.model }}"
        KERNEL_PATH="$CONFIG_DIR/kernel_platform"
        cp "$KERNEL_PATH/common/out/arch/arm64/boot/Image" "$GITHUB_WORKSPACE/AnyKernel3/Image"
        cd "$GITHUB_WORKSPACE/AnyKernel3"
        ZIP_NAME="AnyKernel3_${{ inputs.model }}_${{ inputs.android_version }}-${{ inputs.kernel_version }}.zip"
        ARTIFACTS_DIR="$CONFIG_DIR/artifacts"
        mkdir -p "$ARTIFACTS_DIR"
        zip -r "$ARTIFACTS_DIR/$ZIP_NAME" ./*

    # ‚òÅÔ∏è Upload artifacts
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ inputs.model }}
        path: ${{ inputs.model }}/artifacts/*

