name: "Build Kernel"
description: "Composite action for KernelSU-Next + SUSFS + Wild + OnePlus patches"

inputs:
  model:
    required: true
    type: string
  soc:
    required: true
    type: string
  branch:
    required: true
    type: string
  manifest:
    required: true
    type: string
  android_version:
    required: true
    type: string
  kernel_version:
    required: true
    type: string
  ksun_branch:
    required: false
    type: string
    default: stable
  susfs_branch:
    required: false
    type: string
    default: ""

runs:
  using: "composite"
  steps:
    # üöÄ Setup Build Environment
    - name: Setup Build System
      shell: bash
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update -qq
        sudo apt-get install -yq --no-install-recommends \
          python3 git curl libelf-dev lld build-essential flex bison libssl-dev \
          libncurses-dev liblz4-tool zlib1g-dev libxml2-utils rsync unzip python-is-python3 zip

    # üõ†Ô∏è Install Repo Tool
    - name: Install Repo Tool
      shell: bash
      run: |
        mkdir -p ./git-repo
        curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > ./git-repo/repo
        chmod a+rx ./git-repo/repo
        echo "REPO=$GITHUB_WORKSPACE/./git-repo/repo" >> "$GITHUB_ENV"
        echo "CONFIG=${{ inputs.model }}" >> "$GITHUB_ENV"

    # üì¶ Clone dependencies
    - name: Clone AnyKernel3 and Other Dependencies
      shell: bash
      run: |
        ANYKERNEL_BRANCH="gki-2.0"
        SUSFS_BRANCH="${{ inputs.susfs_branch || format('gki-{0}-{1}', inputs.android_version, inputs.kernel_version) }}"
        git clone https://github.com/TheWildJames/AnyKernel3.git -b "$ANYKERNEL_BRANCH"
        git clone https://github.com/TheWildJames/kernel_patches.git
        git clone https://gitlab.com/simonpunk/susfs4ksu.git
        cd susfs4ksu
        git checkout "$SUSFS_BRANCH" || exit 1

    # üíæ Init + Sync Kernel Source
    - name: Initialize and Sync Kernel Source
      shell: bash
      run: |
        mkdir -p "${{ inputs.model }}"
        cd "${{ inputs.model }}"
        if [[ "${{ inputs.manifest }}" == https://* ]]; then
          mkdir -p .repo/manifests
          curl -Ls ${{ inputs.manifest }} -o .repo/manifests/temp_manifest.xml
          $REPO init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m temp_manifest.xml --repo-rev=v2.16 --depth=1 --no-clone-bundle --no-tags
        else
          $REPO init -u https://github.com/OnePlusOSS/kernel_manifest.git -b ${{ inputs.branch }} -m ${{ inputs.manifest }} --repo-rev=v2.16 --depth=1 --no-clone-bundle --no-tags
        fi
        $REPO sync -c --no-clone-bundle --no-tags --optimized-fetch -j$(nproc --all) --fail-fast

    # üßπ Cleanup ABI exports
    - name: Clean Up ABI Protected Exports
      shell: bash
      run: |
        cd "${{ inputs.model }}/kernel_platform"
        rm -f common/android/abi_gki_protected_exports_* || true
        rm -f msm-kernel/android/abi_gki_protected_exports_* || true

    # ‚ûï KernelSU Next
    - name: Add KernelSU Next
      shell: bash
      run: |
        cd "${{ inputs.model }}/kernel_platform"
        if [ "${{ inputs.ksun_branch }}" == "stable" ]; then
          curl -LSs "https://raw.githubusercontent.com/WildKernels/Wild_KSU/wild/kernel/setup.sh" | bash -
        else
          curl -LSs "https://raw.githubusercontent.com/WildKernels/Wild_KSU/wild/kernel/setup.sh" | bash -s ${{ inputs.ksun_branch }}
        fi
        git submodule update --init --recursive

    # ‚ö° Apply Kernel Patches
    - name: Apply Kernel Patches
      shell: bash
      run: |
        cd "${{ inputs.model }}/kernel_platform"

        # Copy fs + include from susfs
        cp -r ../../susfs4ksu/kernel_patches/fs/* ./fs/ || true
        cp -r ../../susfs4ksu/kernel_patches/include/linux/* ./include/linux/ || true

        # Apply main enable patch
        patch -p1 --forward < ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch || true

        # Apply general patches from root
        for p in ../../susfs4ksu/*.patch; do
          echo "Applying general patch $p"
          patch -p1 --forward < "$p" || true
        done

        # Apply wild patches
        for p in ../../susfs4ksu/wild/*.patch; do
          echo "Applying wild patch $p"
          patch -p1 --forward < "$p" || true
        done

        # Apply OnePlus-specific hmbird patches
        if [ -d ../../susfs4ksu/oneplus/hmbird ]; then
          for p in ../../susfs4ksu/oneplus/hmbird/*.patch; do
            echo "Applying OnePlus patch $p"
            patch -p1 --forward < "$p" || true
          done
        fi

    # ‚öôÔ∏è Configs
    - name: Add Kernel Configs
      shell: bash
      run: |
        cd "${{ inputs.model }}/kernel_platform/common"
        {
          echo "CONFIG_KSU=y"
          echo "CONFIG_KSU_SUSFS=y"
          echo "CONFIG_TMPFS_XATTR=y"
          echo "CONFIG_TCP_CONG_BBR=y"
          echo "CONFIG_IP_NF_TARGET_TTL=y"
        } >> arch/arm64/configs/gki_defconfig

    # üèóÔ∏è Build Kernel
    - name: Build Kernel
      shell: bash
      run: |
        KERNEL_PATH="$GITHUB_WORKSPACE/${{ inputs.model }}/kernel_platform"
        cd "$KERNEL_PATH/common"
        make -j$(nproc --all) O=out LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-android- gki_defconfig
        make -j$(nproc --all) O=out LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-android-

    # üì¶ Package Kernel ZIP
    - name: Create Kernel ZIP
      shell: bash
      run: |
        CONFIG_DIR="$GITHUB_WORKSPACE/${{ inputs.model }}"
        KERNEL_PATH="$CONFIG_DIR/kernel_platform"
        cp "$KERNEL_PATH/common/out/arch/arm64/boot/Image" "$GITHUB_WORKSPACE/AnyKernel3/Image"
        cd "$GITHUB_WORKSPACE/AnyKernel3"
        ZIP_NAME="AnyKernel3_${{ inputs.model }}_${{ inputs.android_version }}-${{ inputs.kernel_version }}.zip"
        ARTIFACTS_DIR="$CONFIG_DIR/artifacts"
        mkdir -p "$ARTIFACTS_DIR"
        zip -r "$ARTIFACTS_DIR/$ZIP_NAME" ./*

    # ‚òÅÔ∏è Upload
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ inputs.model }}
        path: ${{ inputs.model }}/artifacts/*
